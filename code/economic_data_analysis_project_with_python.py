# -*- coding: utf-8 -*-
"""Economic Data Analysis Project with Python

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gE9xjB4yjJzg10Q3KQo-ugdpWzUxlwqI

# Economic Data Analysis Project via Federal Reserve Economic Data (FRED)

Esse projeto foi inspirado no vídeo do canal: https://www.youtube.com/watch?v=R67XuYc9NQ4&t=14s, com dados da plataforma americana FRED (Federal Reserve Economic Data - https://fred.stlouisfed.org/) e tem como objetivo praticar  coletar, limpar e explorar dados econômicos de forma eficiente. Através de técnicas de raspagem de dados, limpeza e exploração, o projeto busca fornecer insights valiosos sobre indicadores econômicos. Os dados serão coletados via API do próprio site.

# 1. Importando as bibliotecas que iremos usar:
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import plotly.express as px
from fredapi import Fred
import time

# Estilo dos gráficos:

plt.style.use('fivethirtyeight')
pd.set_option("display.max_columns", 500)
color_pal = plt.rcParams["axes.prop_cycle"].by_key()["color"]

"""## 2. Baixando os dados iniciais:"""

!pip install fredapi >/dev/null

# >/dev/null para não aparecer todo o texto de instalação!

# Inserindo a api coletada do site:

fred_key = '48c84796306d7592190e31e2b816f182' # Solcite a sua api pelo site no informativo do projeto

# Criando um objeto FRED:
fred = Fred(api_key=fred_key)

# Fazendo a busca:

fred.search('S&P')

# Ordenando por popularidade:

fred.search('S&P', order_by='popularity')

# Ordenando a busca por popularidade e atribuindo a uma variável:

sp_search = fred.search('S&P', order_by='popularity')

# Baixando esses dados para a memória do nosso notebook:

sp500 = fred.get_series(series_id = 'SP500')
sp500.plot(figsize = (10, 5), title = 'SP500', lw = 2, color = 'r')
plt.plot()

"""O gráfico apresenta a evolução do índice S&P 500 (O S&P 500 é um índice que mede o desempenho de 500 grandes empresas listadas nas bolsas dos EUA, sendo usado como referência da economia americana e dos mercados de ações globais) entre 2015 e 2024, mostrando um crescimento constante com destaque para a queda abrupta em 2020, causada pela pandemia de COVID-19 possivelmente, seguida de uma rápida recuperação e contínua valorização até alcançar novos picos em 2024. Esse comportamento reflete a resiliência do mercado financeiro americano, impulsionado por políticas de estímulo econômico e avanços tecnológicos.

## 3. Juntando a outros data-sets:
"""

# Levantando os data frames das taxas de desemprego nos EUA:

unemp_df = fred.search('unemployment rate state', filter=('frequency','Monthly'))
unemp_df

# Filtrando os que são mais interessantes para o nosso caso

unemp_df = fred.search('unemployment rate state', filter=('frequency','Monthly'))
unemp_df = unemp_df.query('seasonal_adjustment == "Seasonally Adjusted" and units == "Percent"')
unemp_df

# Pegando apenas aqueles que falam de 'Unemployment Rate' na coluna title e colocando na lista com todos os resultados:

all_results = []
for myid in unemp_df.index:
    results = fred.get_series(myid)
    results = results.to_frame(name=myid)
    all_results.append(results)
    time.sleep(0.1) # Não requisitar muito rápido e ser bloqueado! (limite de 500 estabelecido na primeira linha)
uemp_results = pd.concat(all_results, axis=1) # Concatena todos juntos

"""## 4. Verrificando a existencia de nulos:"""

# Fazendo o check dos valores nulos

uemp_results.isna()

uemp_results.isna().sum()
# Vemos que temos muitos valores nulos

cols_to_drop = []
for i in uemp_results:
    if len(i) > 4:
        cols_to_drop.append(i)
uemp_results = uemp_results.drop(columns = cols_to_drop, axis=1)

# Vamos dropar UNRANTE, pois não é um estado:

uemp_states = uemp_results.copy()#.drop('UNRATE', axis=1)

uemp_results

# Verificando os NA values:

uemp_results.isna().sum(axis = 1).plot()

"""Em meados de 1980 foi quando se iniciou o fornecimento de dados mensais, por isso podemos apagar sem problemas os dados vazios!"""

# Tirando os valores NA:
uemp_states = uemp_results.copy()
uemp_states = uemp_states.dropna()
id_to_state = unemp_df['title'].str.replace('Unemployment Rate in ','').to_dict()
uemp_states.columns = [id_to_state[c] for c in uemp_states.columns]

uemp_states

# Plotando o indice de desemprego por estado:

px.line(uemp_states)

"""##5. Maio 2020

Vemos que em maio de 2020 há um pico gigantesco, vamos avaliar mais de perto!
"""

ax = uemp_states.loc[uemp_states.index == '2020-05-01'].T \
    .sort_values('2020-05-01') \
    .plot(kind='barh', figsize=(8, 12), width=0.7, edgecolor='black',
          title='Unemployment Rate by State, May 2020')
ax.legend().remove()
ax.set_xlabel('% Unemployed')
plt.show()

"""O gráfico mostra a taxa de desemprego nos estados dos EUA em maio de 2020, evidenciando um forte impacto econômico da pandemia de COVID-19. Estados como Nevada e Hawaii apresentam as maiores taxas, próximas de 25%, refletindo a dependência de setores como turismo, enquanto Nebraska, South Dakota e North Dakota registram as menores, abaixo de 8%, devido a economias mais estáveis e menos afetadas. Há uma disparidade significativa entre estados, com áreas urbanas e industriais, como Michigan e New York, também sofrendo altas taxas. Essas variações regionais destacam a necessidade de políticas econômicas direcionadas para apoiar os estados mais impactados.

## 6. Trazendo a paritcipação por estado:

Para investigar mais de perto essa questão vamos trazer uma planilha de "participation rate state" seguindo o mesmo modelo!
"""

part_df = fred.search('participation rate state', filter=('frequency','Monthly'))
part_df = part_df.query('seasonal_adjustment == "Seasonally Adjusted" and units == "Percent"')

# Repare que estamos basicamente repetindo o que foi feito anteriormente:

part_id_to_state = part_df['title'].str.replace('Labor Force Participation Rate for ','').to_dict()

all_results = []

for myid in part_df.index:
    results = fred.get_series(myid)
    results = results.to_frame(name=myid)
    all_results.append(results)
    time.sleep(0.1) # Don't request to fast and get blocked
part_states = pd.concat(all_results, axis=1)
part_states.columns = [part_id_to_state[c] for c in part_states.columns]

"""## 7. Plorando Desemprego x Taxa de participação por estado"""

uemp_states

# Repare que na coluna do estado Columbia, temos 'the District of Columbia', vamos mudar isso:

uemp_states = uemp_states.rename(columns={'the District of Columbia':'District Of Columbia'})

# Plotando multiplos gráficos para cada estado:

fig, axs = plt.subplots(10, 5, figsize=(30, 30), sharex=True)
axs = axs.flatten()

i = 0
for state in uemp_states.columns:
    if state in ["District Of Columbia","Puerto Rico"]:
        continue
    ax2 = axs[i].twinx()
    uemp_states.query('index >= 2020 and index < 2022')[state] \
        .plot(ax=axs[i], label='Unemployment')
    part_states.query('index >= 2020 and index < 2022')[state] \
        .plot(ax=ax2, label='Participation', color=color_pal[1])
    ax2.grid(False)
    axs[i].set_title(state)
    i += 1
plt.tight_layout()
plt.show()

"""O gráfico mostra a evolução das taxas de desemprego (linha azul) e de participação na força de trabalho (linha vermelha) nos estados dos EUA entre 2020 e 2022, destacando o impacto da pandemia de COVID-19 e a recuperação subsequente. Em 2020, observa-se um aumento abrupto no desemprego em todos os estados, especialmente em Nevada e Hawaii, devido à dependência do turismo, enquanto Nebraska e North Dakota apresentaram menor impacto e recuperação mais rápida, refletindo economias mais resilientes. A taxa de participação na força de trabalho também caiu em muitos estados no início da pandemia, mas nem todos retornaram aos níveis pré-pandemia, indicando uma recuperação desigual. A partir do final de 2020, o desemprego começa a cair gradualmente, enquanto a taxa de participação apresenta recuperações variadas, com estados como California e New York mostrando uma retomada mais consistente, enquanto Wyoming e South Dakota mantêm estabilidade em ambas as métricas, sugerindo menor volatilidade econômica.

## 8. Correlação entre Desemprego e Taxa de Participação:
"""

uemp_states = uemp_states.sort_index()
part_states = part_states.sort_index()

# Criando um DataFrame combinado para correlação:
combined_df = pd.DataFrame({
    'unemployment': uemp_states.mean(axis=0),  # Média de desemprego por estado
    'participation': part_states.mean(axis=0)  # Média de participação por estado
})

# Calculando a correlação:
correlation = combined_df.corr()

print("Correlação entre taxa de desemprego e participação na força de trabalho:")
print(correlation)

# Visualizando a relação com um scatterplot:
plt.figure(figsize=(10, 6))
sns.scatterplot(data=combined_df, x='participation', y='unemployment')
plt.title('Correlação entre Taxa de Participação e Desemprego')
plt.xlabel('Taxa de Participação (%)')
plt.ylabel('Taxa de Desemprego (%)')
plt.grid(True)
plt.show()

"""O gráfico de dispersão mostra a relação inversa entre a taxa de participação na força de trabalho e a taxa de desemprego nos estados dos EUA. Observa-se que estados com maior taxa de participação, acima de 65%, tendem a apresentar taxas de desemprego mais baixas, próximas de 4%. Por outro lado, estados com menor taxa de participação, abaixo de 60%, exibem taxas de desemprego mais altas, acima de 7%. Essa correlação negativa sugere que uma maior inclusão da população na força de trabalho pode estar associada a um mercado de trabalho mais robusto, onde menos pessoas ficam desempregadas."""